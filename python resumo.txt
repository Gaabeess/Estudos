# Resumo teórico de Python :snake:
   
## *Tabela de precedência e associatividade de operadores aritméticos*

Operador -> ()       -> parentesês                                        -> da esquerda para a direita
Operador -> **       -> potência                                          -> da direita para a esquerda 
Operador -> +,-      -> positivo e negativo unário                        -> da direita para a esquerda 
Operador -> *,/,//,% -> multiplicação , divisão, divisão inteira e resto  -> da esquerda para a direita
Operador -> +,-      -> soma e subtração                                  -> da esquerda para a direita

---

## *Tabela dos operadores relacionais*

Operador -> == -> igualdade      -> Exemplo: 2 == 3 -> False
Operador -> != -> desigualdade   -> Exemplo: 2 != 3 -> True
Operador -> >  -> maior          -> Exemplo: 3 > 3  -> False
Operador -> >= -> maior ou igual -> Exemplo: 3 >= 3 -> False
Operador -> <  -> menor          -> Exemplo: 2 < 3  -> True
Operador -> <= -> menor ou igual -> Exemplo: 4 <= 3 -> False

---

## *Precedência dos operadores lógicos*

not -> negação lógica -> not True       -> False -> (Inverte o valor booleano)
and -> E lógico       -> True and False -> False -> (Necessita de dois True para resultar True)
or  -> OR lógico      -> True or False  -> True  -> (Necessita de ao menos um True para resultar True)

---

# *Comando de repetição: ~while~*

Quando o comando while é executado, a *condição* é testada e, caso verdadeira,
o seu corpo é executado um comando de cada vez, ou seja *comando_1* primeiro, depois o *comando_2*,
até o *comando_n*. Após a execução do comando_n a condição volta a ser testada e, caso verdadeira,
o processo se repete. O while termina quando, ao testar a condição, o resultado do teste for False.

---

# *Pytest*

Utilizado para automatizar testes em python.
Todo arquivo de teste deve ser escrito a seguinte maneira - test_*.py ou *_test.py (* representa o nome do arquivo a ser testado)
Executa funções de metodos do tipo test_*.
Os testes devem ser feitos pelo terminal ou cmd.
Todo arquivo de testes deve ser criado fora do arquivo que irá ser testado.

---
## *Sintaxe*

-> if (condição):
    comando
    return (retorna o resultado que foi escolhido)
-> elif (condição):
    comando
    return (retorna o resultado que foi escolhido)
-> else (condição ou sem condição):
    comando
    return (retorna o resultado que foi escolhido)

-> while (condição):
    comando_1
    comando_2
    ...
    comando_n

def nome_da_função(argumentos/sem argumento):
    Tudo que for necessário para a função realizar o que Necessita
    return (retorna o resultado que foi escolhido) / assert (se for um teste)
---

## *Técnicas*

O Python permite a notação (x <= a and x >= b) para verificar se o valor x está no intervalo [a, b]

input() sempre retorna uma stg
